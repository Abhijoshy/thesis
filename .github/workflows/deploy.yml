name: Deploy Flask App to AWS EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies locally (for testing)
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Test Flask app (basic syntax check)
      run: |
        python -c "import app; print('Flask app syntax is valid')"
        
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        # Create SSH key file with proper format
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        
        # Verify SSH key format
        if ! ssh-keygen -l -f private_key.pem > /dev/null 2>&1; then
          echo "ERROR: SSH key format is invalid"
          exit 1
        fi
        
        # Simple SSH options that work
        SSH_OPTS="-i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR"
        
        # Test basic connection
        echo "Testing SSH connection..."
        ssh $SSH_OPTS ec2-user@$HOST "whoami && pwd"
        
        # Skip process killing for first deployment
        echo "Skipping process killing for initial deployment..."
        
        # Create directory
        echo "Creating application directory..."
        ssh $SSH_OPTS ec2-user@$HOST "mkdir -p /home/ec2-user/abhishek-thesis"
        
        # Upload files one by one to debug
        echo "Uploading app.py..."
        scp $SSH_OPTS app.py ec2-user@$HOST:/home/ec2-user/abhishek-thesis/
        
        echo "Uploading requirements.txt..."
        scp $SSH_OPTS requirements.txt ec2-user@$HOST:/home/ec2-user/abhishek-thesis/
        
        echo "Uploading templates folder..."
        scp $SSH_OPTS -r templates/ ec2-user@$HOST:/home/ec2-user/abhishek-thesis/
        
        echo "Uploading saved_models folder..."
        scp $SSH_OPTS -r saved_models/ ec2-user@$HOST:/home/ec2-user/abhishek-thesis/
        
        # Install Python and pip if not available
        echo "Setting up Python environment..."
        ssh $SSH_OPTS ec2-user@$HOST "sudo yum update -y"
        ssh $SSH_OPTS ec2-user@$HOST "sudo yum install -y python3 python3-pip"
        
        # Install dependencies
        echo "Installing Python dependencies..."
        ssh $SSH_OPTS ec2-user@$HOST "cd /home/ec2-user/abhishek-thesis && python3 -m pip install --user -r requirements.txt"
        
        # Start Flask app
        echo "Starting Flask application..."
        ssh $SSH_OPTS ec2-user@$HOST "cd /home/ec2-user/abhishek-thesis && nohup python3 app.py > flask_app.log 2>&1 &"
        
        # Wait and check
        echo "Waiting for app to start..."
        sleep 10
        
        # Check if it's running
        ssh $SSH_OPTS ec2-user@$HOST "cd /home/ec2-user/abhishek-thesis && ps aux | grep python"
        
        # Test the app
        ssh $SSH_OPTS ec2-user@$HOST "curl -s http://localhost:5000 && echo 'App is responding!'"
        
        # Cleanup
        rm -f private_key.pem
        
        echo "Deployment completed!"
        echo "Access your app at: http://$HOST:5000"
